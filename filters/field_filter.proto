// Copyright 2021 Linka Cloud  All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package linka.cloud.protofilters;

option csharp_namespace = "LinkaCloud.ProtoFilters";
option java_package = "cloud.linka.protofilters";
option java_outer_classname = "ProtoFilters";
option java_multiple_files = true;
option objc_class_prefix = "LKPF";
option go_package = "go.linka.cloud/protofilters/filters;filters";
option cc_enable_arenas = true;


import "google/protobuf/timestamp.proto";
import "google/protobuf/duration.proto";

message Expression {
  FieldFilter condition = 1;
  repeated Expression and_exprs = 2;
  repeated Expression or_exprs = 3;
}

message FieldsFilter {
  // Filters is a map of <field path, Filter>
  map<string, Filter> filters = 1;
}

message FieldFilter {
  // Field is the field's path
  string field = 1;
  Filter filter = 2;
}

message Filter {
  oneof match {
    StringFilter string = 1;
    NumberFilter number = 2;
    BoolFilter bool = 3;
    NullFilter null = 4;
    TimeFilter time = 5;
    DurationFilter duration = 6;
  }
  // Not negates the match result
  bool not = 7;
}

message StringFilter {
  message In {
    repeated string values = 1;
  }
  oneof condition {
    string equals = 1;
    string regex = 2;
    In in = 3;
  }
  bool case_insensitive = 4;
}

message NumberFilter {
  message In {
    repeated double values = 1;
  }
  oneof condition {
    double equals = 1;
    double sup = 2;
    double inf = 3;
    In in = 4;
  }
}

message NullFilter {}

message BoolFilter {
  bool equals = 1;
}

message TimeFilter {
  oneof condition {
    google.protobuf.Timestamp equals = 1;
    google.protobuf.Timestamp before = 2;
    google.protobuf.Timestamp after = 3;
  }
}

message DurationFilter {
  oneof condition {
    google.protobuf.Duration equals = 1;
    google.protobuf.Duration sup = 2;
    google.protobuf.Duration inf = 3;
  }
}
